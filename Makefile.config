#BareLibC -- Copyright (C) 2010 Gergely Gabor Nagy (ngg@ngg.hu) -- see attached LICENSE file

ifndef MAKECONFIG
MAKECONFIG = 1

PROJNAME = barelibc

ifeq "$(BINDIR)" ""
BINDIR = ../../bin
endif

ifeq "$(INCDIR)" ""
INCDIR = ../../include
endif

#.SILENT:
.SUFFIXES:
.SECONDARY:
.DEFAULT_GOAL = all
.SECONDEXPANSION:

ifeq "$(__OS)" ""
__OS = baremetal
endif

ifeq "$(__OS)" "baremetal"

APPEXT = .app

AS = yasm
ASFLAGS = -f elf64 -D PARAM1=rdi -D PARAM1_32=edi -D PARAM2=rsi -D PARAM2_32=esi
LD = ld
LDFLAGS = -T $(BINDIR)/app.ld
AR = ar
ARFLAGS = cr

CC = $(CCOMPILER)
ifeq "$(CC)" ""
CC = gcc
endif

CXX = $(CXXCOMPILER)
ifeq "$(CXX)" ""
CXX = g++
endif

COMMONFLAGS = -m64 -nostdlib -nostdinc -nostartfiles -nodefaultlibs -fno-zero-initialized-in-bss -mno-red-zone -ffreestanding -fpack-struct -undef -Wall -Werror -I$(INCDIR) -D__os_$(__OS)
ifeq "$(DEBUG)" ""
COMMONFLAGS += -O3 -ffast-math
else
COMMONFLAGS += -O0 -g
endif

ifeq "$(CC)" "clang"
COMMONFLAGS += -D__CLANG__
endif

endif # baremetal

ifeq "$(__OS)" "linux"

APPEXT = 

AS = yasm
ASFLAGS = -f elf64 -D PARAM1=rdi -D PARAM1_32=edi -D PARAM2=rsi -D PARAM2_32=esi
LD = gcc
LDFLAGS = -L$(BINDIR) -lc
AR = ar
ARFLAGS = cr

CC = $(CCOMPILER)
ifeq "$(CC)" ""
CC = gcc
endif

CXX = $(CXXCOMPILER)
ifeq "$(CXX)" ""
CXX = g++
endif

COMMONFLAGS = -m64 -nostdinc -fpack-struct -undef -Wall -Werror -I$(INCDIR) -D__os_$(__OS)
ifeq "$(DEBUG)" ""
COMMONFLAGS += -O3 -ffast-math
else
COMMONFLAGS += -O0 -g
endif
ifeq "$(CC)" "clang"
COMMONFLAGS += -D__CLANG__
endif

endif # linux

ifeq "$(__OS)" "windows"

APPEXT = .exe

AS = yasm
ASFLAGS = -f x64 --prefix=_ -D PARAM1=rcx -D PARAM1_32=ecx -D PARAM2=rdx -D PARAM2_32=edx
LD = gcc
LDFLAGS = -L$(BINDIR)
AR = ar
ARFLAGS = cr
CC = gcc
CXX = g++

COMMONFLAGS = -m64 -nostdinc -fpack-struct -undef -Wall -Werror -I$(INCDIR) -D__os_$(__OS)
ifeq "$(DEBUG)" ""
COMMONFLAGS += -O3 -ffast-math
else
COMMONFLAGS += -O0 -g
endif

endif # windows


CFLAGS = $(COMMONFLAGS) -std=c99
CPPFLAGS = $(COMMONFLAGS)

LIB = $(BINDIR)/lib$(PROJNAME).a

%.o: %.asm
	$(AS) $(ASFLAGS) $< -o $@

%.o: %.c
	$(CC) $(CFLAGS) -c -o $@ $<

endif #MAKECONFIG


###
